[{"D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\index.js":"1","D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\game.js":"2","D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\Ad.js":"3","D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\Chat.js":"4"},{"size":1383,"mtime":1606952907903,"results":"5","hashOfConfig":"6"},{"size":3231,"mtime":1606947603579,"results":"7","hashOfConfig":"6"},{"size":211,"mtime":1606951948867,"results":"8","hashOfConfig":"6"},{"size":1753,"mtime":1606950617604,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7qaz15",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\index.js",[],"D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\game.js",["21"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./game.css\";\r\n\r\nexport function Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport class Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\Ad.js",["22"],"import React from \"react\";\r\nimport image from \"./image.jpg\";\r\n\r\nexport class Ad extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src={image}></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\OneDrive\\Coding\\React\\react-org tuto\\my-app\\src\\Chat.js",["23","24","25"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  title: {},\r\n  TextField: {\r\n    margin: theme.spacing(1),\r\n    width: \"100ch\",\r\n  },\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map((value) =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    })\r\n  );\r\n}\r\n\r\nexport function Chat(props) {\r\n  const classes = useStyles(props);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Chat\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <List dense={dense}>\r\n            {generate(\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Single-line item\"\r\n                  secondary={secondary ? \"Secondary text\" : null}\r\n                />\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <form className={classes.TextField} noValidate autoComplete=\"off\">\r\n            <TextField id=\"standard-basic\" label=\"Type here\" />\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":16},{"ruleId":"30","severity":1,"message":"31","line":8,"column":9,"nodeType":"32","endLine":8,"endColumn":26},{"ruleId":"26","severity":1,"message":"33","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":13},{"ruleId":"26","severity":1,"message":"34","line":30,"column":17,"nodeType":"28","messageId":"29","endLine":30,"endColumn":25},{"ruleId":"26","severity":1,"message":"35","line":31,"column":21,"nodeType":"28","messageId":"29","endLine":31,"endColumn":33},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used."]